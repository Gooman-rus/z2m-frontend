{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/map/map.css?b431","webpack:///external \"window.d3\"","webpack:///./src/components/map/types.ts","webpack:///./src/components/map/links.tsx","webpack:///./src/utils.ts","webpack:///./src/components/map/nodes.tsx","webpack:///./src/components/map/tooltip.tsx","webpack:///./src/store.ts","webpack:///./src/mqtt.ts","webpack:///./src/actions.ts","webpack:///./src/components/map/index.tsx","webpack:///./src/components/button/index.tsx","webpack:///./src/components/device-control/index.tsx","webpack:///./src/components/safe-image/index.tsx","webpack:///./src/components/power-source/index.tsx","webpack:///./src/components/zigbee/ActionTH.tsx","webpack:///./src/components/zigbee/index.tsx","webpack:///./src/components/device-page/index.tsx","webpack:///./src/components/settings/index.tsx","webpack:///./src/components/navbar/index.tsx","webpack:///./src/index.tsx","webpack:///./src/components/map/tooltip.css?6018","webpack:///./src/components/power-source/style.css?c52c","webpack:///./src/components/zigbee/style.css"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","d3","ZigbeeRelationship","ref","componentDidMount","current","this","link","props","render","id","rest","linkType","className","strokeWidth","xlinkHref","textPath","startOffset","linkquality","dy","links","x","y","width","height","in","map","index","genDeviceDetailsLink","deviceIdentifier","encodeURIComponent","genDeviceImageUrl","modelID","modelName","replace","obj","lastSeen","device","secs","Date","now","Math","floor","v","filter","join","getStarShape","innerCircleArms","styleStarWidth","innerOuterRadiusRatio","centerX","centerY","innerRadius","outerRadius","angle","PI","totalArms","points","cos","sin","calcStarPoints","state","imgUrl","onMouseOut","node","onMouseOver","onDblClick","onImageError","setState","deviceType","type","cn","class","onError","href","friendlyName","updateDrag","simulation","dragForce","on","active","alphaTarget","restart","fx","fy","undefined","componentDidUpdate","nodes","strings","info","tooltip","manufacturerName","ieeeAddr","JSON","parse","localStorage","getItem","e","initialState","settings","forceRender","isLoading","isError","devices","deviceStates","bindRules","logs","files","executionResults","currentFileContent","currentFile","touchlinkResuts","touchlinkScanInProgress","networkGraph","sendMessage2Z2M","topic","message","error","getState","mqtt_topic_preffix","connect","mqtt_host","username","mqtt_user","password","mqtt_password","protocolVersion","subscribe","rh","rap","qos","err","_topic","inGraph","nodesWithLinks","coordinatorNode","filteredOutLinks","siblings","toString","success","stringify","forEach","networkAddress","sort","a","b","relationship","src","source","dst","target","NeigbhorIsASibling","console","log","match","input","publish","store","setLoading","getZigbeeDevicesList","showLoading","Promise","resolve","removeBind","dev","bindRule","createBind","setJoinDuration","duration","renameDevice","old","newName","new","removeDevice","force","networkMapRequest","touchlinkScan","getDistance","setTooltip","tooltipNode","removeTooltip","openDetailsWindow","open","onRequestClick","updateNodes","updateForces","linkLabel","attr","max","min","bbox","getBBox","linkForce","distance","strength","chargeForce","distanceMin","distanceMax","repelForce","collisionForce","iterations","centerForce","initPage","getBoundingClientRect","renderMap","viewBox","foreignObject","renderMessage","onClick","container","item","children","onBindClick","location","friendly_name","onRenameClick","getDeviceInfo","prompt","onRemoveClick","confirm","validDevice","role","isOk","battery","batteryClass","title","plug","event","preventDefault","stopPropagation","column","renderArrow","currentDirection","invisible","saveState","storeData","sortDirection","sortColumn","setItem","loadData","onSortChange","sortDir","currentTime","restoreState","storedState","restored","renderDevicesTable","sortedDevices","adaptive","zigbee","titile","padding","repeat","substr","toUpperCase","powerSource","searchParams","URL","paramActiveTab","deviceId","activeTab","getDeviceBinds","form","changeHandler","onSubmit","for","required","onChange","placeholder","activeClassName","handleRoute","url","settingsConfigured","history","path","document","body"],"mappings":"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","file":"scripts/main.be584f1ef959dd70f66f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"2YZa\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3UsUxhqLZHNtuszm8EI_1s\",\"img\":\"fuuZbvihQGWIy3CO8t5fw\",\"node\":\"I_ddn1k4fvLAQLh2qam_d\",\"link\":\"oJeonYZxCbLDqS9yrBiG5\",\"linkLabel\":\"ipEfrGz4VI8P2v-Hm0MgN\",\"links\":\"qlfIBJJwZ24x2b-QgFmLW\",\"nodes\":\"_1eZESYvchmyr8mmKIBCmBR\",\"EndDevice\":\"_113dX3BKO5fr4pAzdXC69K\",\"Coordinator\":\"_3-cVoVzbbOOvbMydd2G1J6\",\"Router\":\"_1NuCcdsGVpzqyMOXPkAEco\",\"BrokenLink\":\"eaJkWU9cdu_uiUhpdrS-a\",\"Router2Coordinator\":\"_16GkebpgcHFnf2uJIgqlWu\",\"Router2Router\":\"_2nbipMaMmif3N4YQw4wgIC\",\"EndDevice2Coordinator\":\"_2kxuG_VR9_Fy7SGa4OSXVQ\",\"EndDevice2Router\":\"_3fc-4gZS_GCPbobf1dvlBo\",\"foreignObject\":\"nnn_JJwC5kC3gKbpcaXVA\",\"offline\":\"_2eFLqqfzaRUzHTEot23elk\"};","module.exports = window.d3;","import { SimulationLinkDatum, SimulationNodeDatum } from \"d3-force\";\nimport { DeviceType } from \"../../types\";\n\nexport interface NodeI extends SimulationNodeDatum {\n    ieeeAddr: string;\n    friendlyName?: string;\n    type?: DeviceType;\n    networkAddress: number;\n    manufacturerName?: string;\n    modelID?: string;\n    failed?: string[];\n    lastSeen?: number;\n}\n\nexport type LinkType =\n    \"Coordinator2EndDevice\" |\n    \"Coordinator2Router\" |\n    \"EndDevice2Router\" |\n    \"Router2Router\" |\n    \"BrokenLink\";\n\nexport interface Source {\n    ieeeAddr: string;\n    networkAddress: number;\n}\n\nexport interface Target {\n    ieeeAddr: string;\n    networkAddress: number;\n}\nexport enum ZigbeeRelationship {\n    NeigbhorIsParent,\n    NeigbhorIsAChild,\n    NeigbhorIsASibling,\n    NoneOfTheAbove,\n    NeigbhorIsAFormerChild\n}\n\nexport interface LinkI extends SimulationLinkDatum<NodeI> {\n    source: Source | string;\n    target: Target | string;\n    linkquality: number;\n    depth: number;\n    routes: unknown[];\n    sourceIeeeAddr: string;\n    targetIeeeAddr: string;\n    sourceNwkAddr: number;\n    lqi: number;\n    relationship: ZigbeeRelationship;\n    linkType: LinkType;\n}\n\nexport interface GraphI {\n    nodes: NodeI[];\n    links: LinkI[];\n}\n","import { LinkI } from \"./types\";\nimport { Component, ComponentChild, createRef, FunctionalComponent, h, RefObject } from \"preact\";\nimport * as style from \"./map.css\";\nimport cx from \"classnames\";\nimport * as d3 from \"d3\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nclass Link extends Component<LinkProps, {}> {\n    ref = createRef<SVGPathElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { link } = this.props;\n        d3.select(current as SVGPathElement).data([link]);\n    }\n\n    render(): ComponentChild {\n        const { link, id, ...rest } = this.props;\n        const { linkType } = link;\n        return (\n            <path\n                id={id}\n                {...rest}\n                className={cx(style.link, style[linkType])}\n                ref={this.ref as RefObject<SVGPathElement>}\n                strokeWidth={1}\n            />\n        );\n    }\n}\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nclass LinkLabel extends Component<LinkLabelProps, {}> {\n    ref = createRef<SVGTextElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { link } = this.props;\n        d3.select(current as SVGTextElement).data([link]);\n    }\n\n    render(): ComponentChild {\n        const { link, xlinkHref } = this.props;\n        /* eslint-disable @typescript-eslint/ban-ts-ignore */\n        //@ts-ignore\n        const textPath = <textPath startOffset=\"50%\" xlinkHref={xlinkHref}>{link.linkquality}</textPath>;\n        return (\n            <text\n                className={style.linkLabel}\n                ref={this.ref}\n                dy={4}\n            >{textPath}\n            </text>\n        );\n    }\n}\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionalComponent<LinksPros> = props => {\n    const { links } = props;\n    return (\n        <g className={style.links}>\n            <defs>\n                <filter x=\"-0.1\" y=\"0\" width=\"1.2\" height=\"1\" id=\"solid\">\n                    <feFlood flood-color=\"#eef5f9\" />\n                    <feComposite in=\"SourceGraphic\" />\n                </filter>\n            </defs>\n            {links.map((link: LinkI, index: number) => (\n                <Link\n                    id={`edgepath${index}`}\n                    key={`link${index}`}\n                    link={link}\n                />\n            ))}\n            {links.map((link: LinkI, index: number) => (\n                <LinkLabel\n                    xlinkHref={`#edgepath${index}`}\n                    key={`label${index}`}\n                    link={link}\n                />\n            ))}\n        </g>\n    );\n};\nexport default Links;\n","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { Device, Dictionary } from \"./types\";\nimport { Notyf } from \"notyf\";\nimport { GraphI, ZigbeeRelationship, NodeI, Target, Source } from \"./components/map/types\";\nimport { link } from \"./components/map/map.css\";\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/device/${encodeURIComponent(deviceIdentifier)}`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n/**\n * Returns an array with arrays of the given size.\n *\n * @param inputArr {Array} array to split\n * @param chunkSize {Integer} Size of every group\n */\nexport function chunkArray<T>(inputArr: T[], chunkSize: number): T[][] {\n\n    const results = [];\n    while (inputArr.length) {\n        results.push(inputArr.splice(0, chunkSize));\n    }\n    return results;\n}\n\nexport const encodeGetParams = (data: Dictionary<string | number>): string => Object.keys(data).map((key) => [key, data[key]].map(encodeURIComponent).join(\"=\")).join(\"&\");\n\nexport const WSConnect = (): ReconnectingWebSocket => {\n    const { hostname } = document.location;\n    if (hostname === \"localhost\") {\n        const { search } = document.location;\n        if (search.indexOf(\"gate\") > 0) {\n            return new ReconnectingWebSocket(`ws://192.168.1.209:81/log`);\n        }\n        return new ReconnectingWebSocket(`ws://localhost:8579`);\n    } else return new ReconnectingWebSocket(`ws://${document.location.hostname}:81/log`);\n};\n\nexport const sanitizeModelNameForImageUrl = (modelName: string): string => {\n    return modelName ? modelName.replace(\"/\", \"_\") : null;\n};\n\nexport const genDeviceImageUrl = (modelID: string): string => (`https://raw.githubusercontent.com/slsys/Gateway/master/devices/png/${sanitizeModelNameForImageUrl(modelID)}.png`);\n\nexport type LoadableFileTypes = \"js\" | \"css\";\n\nexport const fetchJs = (url: string): Promise<unknown> => {\n    return new Promise((resolve, reject) => {\n        const scriptElement = document.createElement(\"script\");\n        scriptElement.addEventListener(\"load\", resolve);\n        scriptElement.addEventListener(\"error\", reject);\n        scriptElement.setAttribute(\"type\", \"text/javascript\");\n        scriptElement.setAttribute(\"src\", url);\n        document.getElementsByTagName(\"head\")[0].appendChild(scriptElement);\n    });\n};\n\nexport const fetchStyle = (url) => {\n    return new Promise((resolve, reject) => {\n        const link = document.createElement(\"link\");\n        link.addEventListener(\"load\", resolve);\n        link.addEventListener(\"error\", reject);\n        link.setAttribute(\"type\", \"text/css\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        link.setAttribute(\"href\", url);\n        document.getElementsByTagName(\"head\")[0].appendChild(link)\n    });\n};\n\nexport function last<T>(collection: T[]) {\n    return collection[collection.length - 1];\n}\nexport function arrayUnique<T>(input: T[]) {\n    return input.filter((v, i, a) => a.indexOf(v) === i);\n}\n\n\n\nexport const bitOps = {\n    getBit: (n: number, bitIndex: number): number => {\n        const bitMask = 1 << bitIndex;\n        const result = n & bitMask;\n        return result >>> bitIndex;\n    },\n    setBit: (n: number, bitIndex: number): number => {\n        const bitMask = 1 << bitIndex;\n        return n | bitMask;\n    },\n    clearBit: (n: number, bitIndex: number): number => {\n        const bitMask = ~(1 << bitIndex);\n        return n & bitMask;\n    }\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\ntype HttMethod = \"GET\" | \"POST\" | \"DELETE\";\ntype ContentType = \"text\" | \"json\" | \"blob\";\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\nexport function callApi<T>(url: string, method: HttMethod, params: Dictionary<any>, payload: any, callback: CallbackHandler<T>, contentType: ContentType = \"json\"): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        fetch(`${url}?${encodeGetParams(params)}`, { method, body: payload })\n            .then((res) => {\n                if (res.status === 200) {\n                    return res[contentType]();\n                }\n                throw new Error(res.statusText);\n\n            })\n            .then(data => {\n                callback(false, data);\n                resolve();\n            })\n            .catch(e => {\n                new Notyf().error(e.toString());\n                callback(e.toString(), undefined);\n                reject();\n            });\n    })\n}\n\nexport const lastSeen = (device: Device): string => {\n\n    const lastSeen = Date.now() - device.lastSeen;\n\n    if (lastSeen < 0) {\n        return \"Now\";\n    }\n    return toHHMMSS(lastSeen / 1000);\n\n};\n\n\nexport const sanitizeGraph = (inGraph: GraphI): GraphI => {\n    const nodes = {};\n    const links = [];\n    const nodesWithLinks = {};\n    let coordinatorNode = {} as NodeI;\n    const filteredOutLinks = [];\n    const siblings = [];\n\n\n    inGraph.nodes.forEach(node => {\n        nodes[node.networkAddress] = node;\n        if (node.type == \"Coordinator\") {\n            coordinatorNode = node;\n        }\n    });\n    inGraph.links = inGraph.links.sort((a, b) => a.relationship - b.relationship);\n\n\n    inGraph.links.forEach(link => {\n        const src: NodeI = nodes[(link.source as Source).networkAddress];\n        const dst: NodeI = nodes[(link.target as Target).networkAddress];\n\n        if (src && dst && link.relationship != ZigbeeRelationship.NeigbhorIsASibling) {\n            const linkType = [src.type, dst.type].sort().join('2');\n            nodesWithLinks[src.networkAddress] = 1;\n            nodesWithLinks[dst.networkAddress] = 1;\n\n            links.push({ ...link, ...{ source: (link.source as Source).networkAddress, target: (link.target as Target).networkAddress, linkType } });\n        } else {\n            switch (link.relationship) {\n                case ZigbeeRelationship.NeigbhorIsASibling:\n                    siblings.push(link)\n                    break;\n                default:\n                    filteredOutLinks.push(link);\n                    break;\n            }\n\n        }\n    });\n    console.log('siblings', siblings);\n    console.log('filteredOutLinks', filteredOutLinks);\n\n    inGraph.nodes.forEach(node => {\n        if (!nodesWithLinks[node.networkAddress]) {\n            //this node has no links, lets connect it to coordinator manually\n            // const linkType = \"\"\n            links.push({ source: node.networkAddress, target: coordinatorNode.networkAddress, linkType: \"BrokenLink\" });\n        }\n    });\n\n    inGraph.links = links;\n    return inGraph;\n};\n\nexport const isObject = (obj: unknown): boolean => {\n    return obj === Object(obj);\n}\n\n\n","import { Component, ComponentChild, createRef, h, RefObject } from \"preact\";\n\n\nimport * as d3 from \"d3\";\nimport { LinkI, NodeI } from \"./types\";\nimport cx from \"classnames\";\n\nimport * as style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport { genDeviceImageUrl } from \"../../utils\";\n\n\nconst calcStarPoints = (\n    centerX: number,\n    centerY: number,\n    innerCircleArms: number,\n    innerRadius: number,\n    outerRadius: number\n): string => {\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\n\nconst getStarShape = (innerCircleArms: number, styleStarWidth: number, innerOuterRadiusRatio: number): string => {\n    return calcStarPoints(\n        15,\n        15,\n        innerCircleArms,\n        styleStarWidth,\n        innerOuterRadiusRatio\n    );\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device): boolean => {\n\n    return Date.now() - device.lastSeen < offlineTimeout;\n};\n\ninterface NodeState {\n    imgUrl: string;\n}\n\nclass Node extends Component<NodeProps, NodeState> {\n    ref = createRef<SVGPolygonElement | SVGCircleElement | SVGImageElement>();\n    state = {\n        imgUrl: \"\"\n    };\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n\n        d3.select(current as SVGElement).data([node]);\n\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({\n            imgUrl: genDeviceImageUrl(node.modelID)\n        });\n    }\n\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        onMouseOut && onMouseOut(node);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        onMouseOver && onMouseOver(node);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        onDblClick && onDblClick(node);\n    };\n\n\n    onImageError = (): void => {\n        this.setState({\n            imgUrl: \"https://raw.githubusercontent.com/slsys/Gateway/master/devices/png/generic-zigbee-device.png\"\n        });\n    };\n\n    render(): ComponentChild {\n        const { imgUrl } = this.state;\n        const { node } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick, onImageError } = this;\n        const deviceType = node.type as string;\n        const cn = cx(style.node, style[deviceType]); //{ [style.offline]: !isOnline(node.device, time) }\n        return (<g class={cn}\n                   ref={this.ref as RefObject<SVGImageElement>}\n                   onMouseOver={onMouseOver}\n                   onMouseOut={onMouseOut}\n                   onDblClick={onDblClick}>\n            {\n                node.type === \"Coordinator\" ? (\n                    <polygon\n                        points={getStarShape(5, 5, 14) as string}\n                    />\n                ) : (\n                    <image\n                        width={32}\n                        height={32}\n                        onError={onImageError}\n\n                        className={`${style.img}`}\n\n                        href={imgUrl}\n                    />\n                )\n            }\n            <text>{node.friendlyName}</text>\n\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    nodes: NodeI[];\n    simulation: d3.Simulation<NodeI, LinkI>;\n}\n\ninterface NodesState {\n    tooltipNode: NodeI | undefined;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    updateDrag(): void {\n        const { simulation } = this.props;\n        const dragForce = d3.drag<SVGCircleElement, NodeI>()\n            .on(\"start\", d => {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", d => {\n                d.fx = d3.event.x;\n                d.fy = d3.event.y;\n            })\n            .on(\"end\", d => {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n\n\n        d3.selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n    render(): ComponentChild {\n        const { nodes, onMouseOut, onMouseOver, onDblClick } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI, index: number) => (\n                    <Node\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        onDblClick={onDblClick}\n                        key={index}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","import { NodeI } from \"./types\";\nimport style from \"./tooltip.css\";\nimport { FunctionalComponent, h } from \"preact\";\n// import { isOnline } from \"./nodes\";\n// import { Device } from \"../../types\";\n// import { lastSeen } from \"../../utils\";\n// import { TimeInfo } from \"../discovery/types\";\n\ninterface TooltipProps {\n    info: NodeI;\n}\n\nconst getTooltip = (device: NodeI): string[] => {\n    const strings: string[] = [];\n    if (device.manufacturerName) {\n        if (device.modelID) {\n            strings.push(`${device.manufacturerName} ${device.modelID}`);\n        } else {\n            strings.push(device.manufacturerName);\n        }\n    }\n    if (device.ieeeAddr) {\n        strings.push(device.ieeeAddr);\n    }\n    // if (device?.st?.linkquality) {\n    //     strings.push(`LinkQuality: ${device.st.linkquality}`);\n    // }\n    // if (strings.length == 0) {\n    //     strings.push(\"A very strange device...\");\n    // }\n    if (device.type !== \"Coordinator\") {\n        // if (device.lastSeen && timeInfo) {\n        //     strings.push(`Last seen: ${lastSeen(device)}`);\n        // }\n        // if (!isOnline(device, timeInfo)) {\n        //     strings.push(\"Offline\");\n        // }\n    }\n    return strings;\n};\n\nconst Tooltip: FunctionalComponent<TooltipProps> = (props: TooltipProps) => {\n    const { info } = props;\n\n    return (\n        <div className={style.tooltip}>\n            {getTooltip(info).map((s) => <div>{s}</div>)}\n        </div>\n\n    );\n};\nexport default Tooltip;","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\n// import graph from \"./to4ko\";\n// import graph from \"./hackercb\";\nconst graph: GraphI = {\n    links:[],\n    nodes: []\n};\n\nimport { BindRule, Device, FileDescriptor, TouchLinkScanApiResponse, Dictionary, DeviceStats } from \"./types\";\n// import { TimeInfo } from \"./components/discovery/types\";\n\nimport { ApiResponse, isObject } from \"./utils\";\nimport { GraphI } from \"./components/map/types\";\n\nexport interface Settings {\n    mqtt_host: string;\n    mqtt_user: string;\n    mqtt_topic_preffix: string;\n    mqtt_password: string;\n\n}\nexport interface GlobalState {\n    forceRender: number;\n    isLoading: boolean;\n    isError: boolean | string;\n    device: Device | undefined;\n    devices: Device[];\n    deviceStates: Dictionary<DeviceStats>;\n    bindRules: BindRule[];\n    // time: TimeInfo | undefined;\n    logs: string[];\n    // logLevel: LogLevel;\n\n\n    files: FileDescriptor[];\n    executionResults: ApiResponse<string> | null;\n\n    currentFileContent: string;\n    currentFile: FileDescriptor;\n\n\n    touchlinkResuts: TouchLinkScanApiResponse | null;\n    touchlinkScanInProgress: boolean;\n\n\n    networkGraph: GraphI;\n\n    settings: Settings;\n\n}\n\n\nlet settings = {} as Settings;\n\ntry {\n    settings = JSON.parse(localStorage.getItem('config'));\n    if (!isObject(settings)) {\n        settings = {} as Settings;\n    }\n} catch (e) {\n\n}\n\n\nconst initialState: GlobalState = {\n    settings,\n    forceRender: Date.now(),\n    device: undefined,\n    isLoading: false,\n    isError: false,\n    devices: [],\n    deviceStates: {},\n    bindRules: [{} as BindRule],\n    // time: undefined,\n    logs: [],\n    // logLevel: LogLevel.LOG_DEBUG,\n\n\n    files: [],\n    executionResults: null,\n    currentFileContent: \"\",\n    currentFile: null,\n    touchlinkResuts: null,\n    touchlinkScanInProgress: false,\n    networkGraph: graph\n};\n\nconst store = process.env.NODE_ENV === 'production' ? createStore(initialState) : devtools(createStore(initialState));\n\nexport default store;","\n\nimport {\n    connect\n} from 'mqtt';\nimport store from \"./store\";\n\nimport { Notyf } from 'notyf';\nimport { sanitizeGraph } from './utils';\n\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nlet sendMessage2Z2M = (topic: string, message: string | Buffer): void => {\n    new Notyf().error(\"Not yet connected\");\n}\n\n\n\nconst { settings } = store.getState();\ntry {\n    const baseTopic = settings.mqtt_topic_preffix;\n    const cleanTopic = (topic: string): string => topic.replace(baseTopic, '');\n\n    const client = connect(settings.mqtt_host, {\n        username: settings.mqtt_user,\n        password: settings.mqtt_password,\n        protocolVersion: 5\n    });\n\n    client.on('connect', () => {\n        client.subscribe(`${baseTopic}#`, { rh: 1, rap: true, qos: 2 }, (err) => {\n            if (err) {\n                new Notyf().error(err);\n            }\n        });\n    });\n    type MessageTypes = \"devices\" | \"device_removed_failed\" | \"device_renamed\" | \"device_force_removed_failed\";\n    interface LogMessage {\n        type: MessageTypes;\n        message: string;\n    }\n    const showNotity = (message: LogMessage): void => {\n        switch (message.type) {\n            case \"devices\":\n                break;\n            case \"device_removed_failed\":\n            case \"device_force_removed_failed\":\n\n                new Notyf().error(`device_removed_failed, ${message.message}`);\n                break;\n\n            case \"device_renamed\":\n                new Notyf().success(\"device_renamed\");\n                break;\n\n            default:\n                new Notyf().success(JSON.stringify(message));\n                break;\n        }\n    }\n\n    const processMessage = (_topic: string, message: string): void => {\n        const topic = cleanTopic(_topic);\n\n        switch (topic) {\n            case 'bridge/config/devices':\n                store.setState({\n                    isLoading: false,\n                    devices: JSON.parse(message.toString())\n                });\n                break;\n            case 'bridge/log':\n                showNotity(JSON.parse(message.toString()));\n                // debugger\n                // new Notyf().error(`Cant parse json, ${e}`);\n                break;\n\n\n\n            case 'bridge/networkmap/raw':\n                store.setState({\n                    isLoading: false,\n                    networkGraph: sanitizeGraph(JSON.parse(message.toString()))\n                });\n                break;\n\n\n            case (topic.match(/^bridge/) || {}).input:\n                console.log('bridge message', topic);\n                break;\n            case (topic.match(/^[A-z0-9]+$/) || {}).input:\n                console.log('device state?', topic, message.toString());\n                // eslint-disable-next-line no-case-declarations\n                const { deviceStates } = store.getState();\n                deviceStates[topic] = JSON.parse(message.toString());\n                console.log('topic', topic);\n                store.setState({ deviceStates });\n                break;\n\n            default: break;\n        }\n    };\n\n    client.on('message', processMessage);\n\n\n    sendMessage2Z2M = (topic: string, message: string | Buffer): void => {\n        client.publish(`${baseTopic}${topic}`, message);\n    }\n\n\n} catch (e) {\n    new Notyf().error(e.toString());\n}\n\n\nexport { sendMessage2Z2M };\n\n\n\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\n\nimport { GlobalState } from \"./store\";\nimport { Store } from \"unistore\";\nimport { sendMessage2Z2M } from './mqtt';\nimport { BindRule, FileDescriptor } from \"./types\";\n\n\n\nexport interface Actions {\n    setLoading(isLoading: boolean): Promise<void>;\n\n    getDeviceInfo(dev: string): Promise<void>;\n\n    getDeviceBinds(dev: string): Promise<void>;\n\n    getZigbeeDevicesList(showLoading: boolean): Promise<void>;\n\n    removeBind(dev: string, bindRule: BindRule): Promise<void>;\n\n    createBind(dev: string, bindRule: BindRule): Promise<void>;\n\n    setBindRules(bindRules: BindRule[]): Promise<void>;\n\n\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setSimpleBindValue(dev: string, name: string, value: unknown): Promise<void>;\n\n    startInterview(dev: string, state: number | \"\"): Promise<void>;\n\n\n\n    setJoinDuration(duration: number, target: string): Promise<void>;\n    fetchLogsBuffer(): Promise<void>;\n    // getCurrentLogLevel(): Promise<void>;\n    clearLogs(): Promise<void>;\n    clearLogsBuffer(): Promise<void>;\n    // setLogLevel(level: LogLevel): Promise<void>;\n\n    setCurrentFileContent(content: string): Promise<void>;\n\n    evalCode(code: string): Promise<void>;\n    writeFile(fileName: string, content: string): Promise<void>;\n\n    clearExecutionResults(): Promise<void>;\n\n    getFilesList(path: string): Promise<void>;\n\n    readFile(file: FileDescriptor): Promise<void>;\n    deleteFile(file: FileDescriptor): Promise<void>;\n\n    renameDevice(old: string, newName: string): Promise<void>;\n    removeDevice(dev: string, force: boolean): Promise<void>;\n    refreshState(dev: string, name: string): Promise<void>;\n\n    touchlinkScan(): Promise<void>;\n    touchlinkList(): Promise<void>;\n    touchlinkIdentify(dev: string): Promise<void>;\n    touchlinkRest(dev: string): Promise<void>;\n\n\n    networkMapRequest(): Promise<void>;\n}\n\nconst actions = (store: Store<GlobalState>): object => ({\n    setLoading(state, isLoading: boolean): void {\n        store.setState({ isLoading });\n    },\n\n\n    getZigbeeDevicesList: (state, showLoading = true): Promise<void> => {\n        showLoading && store.setState({ isLoading: true });\n        sendMessage2Z2M('bridge/config/devices/get', '');\n        return Promise.resolve();\n    },\n\n    removeBind: (state, dev: string, bindRule: BindRule): Promise<void> => {\n        store.setState({ isLoading: true });\n        return Promise.resolve();\n    },\n    createBind: (state, dev: string, bindRule: BindRule): Promise<void> => {\n        store.setState({ isLoading: true });\n        return Promise.resolve();\n    },\n\n\n    setJoinDuration(state, duration = 255, target = \"\"): Promise<void> {\n        store.setState({ isLoading: true });\n        return Promise.resolve();\n    },\n\n\n    renameDevice: (state, old: string, newName: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        sendMessage2Z2M('bridge/config/rename', JSON.stringify({\n            old, new: newName\n        }));\n        return Promise.resolve();\n    },\n    removeDevice: (state, dev: string, force: boolean): Promise<void> => {\n        store.setState({ isLoading: true });\n\n        if (force) {\n            sendMessage2Z2M('bridge/config/force_remove', dev);\n        } else {\n            sendMessage2Z2M('bridge/config/remove', dev);\n        }\n        return Promise.resolve();\n    },\n\n    networkMapRequest: (state): Promise<void> => {\n        store.setState({ isLoading: true });\n        sendMessage2Z2M('bridge/networkmap', 'raw');\n        return Promise.resolve();\n    },\n\n    touchlinkScan: (state): Promise<void> => {\n        store.setState({ isLoading: true, touchlinkResuts: null });\n        return Promise.resolve();\n    }\n \n});\nexport default actions;\n","import { Component, ComponentChild, createRef, h, Fragment } from \"preact\";\nimport Links from \"./links\";\nimport Nodes from \"./nodes\";\nimport * as d3 from \"d3\";\nimport style from \"./map.css\";\nimport { LinkI, NodeI } from \"./types\";\nimport Tooltip from \"./tooltip\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\nimport { useEffect } from \"preact/hooks\";\n\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI) => void;\n    onMouseOut?: (arg0: NodeI) => void;\n    onDblClick?: (arg0: NodeI) => void;\n}\n\ninterface MapState {\n    tooltipNode: NodeI | false;\n    width: number;\n    height: number;\n\n}\n\nconst getDistance = (d: LinkI): number => {\n\n    switch (d.linkType) {\n        case \"BrokenLink\":\n            return 450;\n        case \"Router2Router\":\n        case \"Coordinator2Router\":\n            return 300;\n        case \"Coordinator2EndDevice\":\n        case \"EndDevice2Router\":\n            return 150;\n        default:\n            return 200;\n    }\n};\n\nexport class Map extends Component<GlobalState & Actions, MapState> {\n    ref = createRef<HTMLDivElement>();\n    simulation!: d3.Simulation<NodeI, LinkI>;\n\n    constructor() {\n        super();\n\n\n        this.simulation = d3.forceSimulation<NodeI>();\n\n        this.state = {\n            width: 0,\n            height: 0,\n            tooltipNode: false\n        };\n    }\n\n    updateNodes(): void {\n        this.updateForces();\n        const node = d3.selectAll<SVGGeometryElement, NodeI>(\n            `.${style.node}`\n        );\n        const link = d3.selectAll<SVGLineElement, LinkI>(\n            `.${style.link}`\n        );\n        const linkLabel = d3.selectAll<SVGLineElement, LinkI>(\n            `.${style.linkLabel}`\n        );\n        const ticked = (): void => {\n            const radius = 40;\n            const { width, height } = this.state;\n            link.attr(\"d\", (d: LinkI): string => {\n                const src = d.source as d3.SimulationNodeDatum;\n                const dst = d.target as d3.SimulationNodeDatum;\n                const x1 = Math.max(radius, Math.min(width - radius, src.x));\n                const y1 = Math.max(radius, Math.min(height - radius, src.y));\n                const x2 = Math.max(radius, Math.min(width - radius, dst.x));\n                const y2 = Math.max(radius, Math.min(height - radius, dst.y));\n                return `M ${x1} ${y1} L ${x2} ${y2}`;\n            });\n\n            linkLabel.attr(\"transform\", function (d) {\n                //TODO: add type guard\n                if (((d.target as NodeI).x as number) < ((d.source as NodeI).x as number)) {\n                    const bbox = this.getBBox();\n                    const rx = bbox.x + bbox.width / 2;\n                    const ry = bbox.y + bbox.height / 2;\n                    return `rotate(180 ${rx} ${ry})`;\n                }\n                return \"rotate(0)\";\n            });\n            const imgXShift = 32 / 2;\n            const imgYShift = 32 / 2;\n            node.attr(\"transform\", d => `translate(${Math.max(radius, Math.min(width - radius, d.x)) - imgXShift}, ${Math.max(radius, Math.min(height - radius, d.y)) - imgYShift})`);\n        };\n        const { networkGraph } = this.props;\n        this.simulation.nodes(networkGraph.nodes).on(\"tick\", ticked);\n        const linkForce = this.simulation.force(\"link\") as d3.ForceLink<NodeI,\n            LinkI>;\n        linkForce.links(networkGraph.links);\n        this.simulation.restart();\n    }\n\n    setTooltip = (tooltipNode: NodeI): void => {\n        this.setState({ tooltipNode });\n    };\n\n    removeTooltip = (): void => {\n        this.setState({ tooltipNode: false });\n    };\n\n    openDetailsWindow = (node: NodeI): void => {\n        switch (node.type) {\n            case \"EndDevice\":\n            case \"Router\":\n                window.open(genDeviceDetailsLink(node.friendlyName));\n                break;\n            default:\n                break;\n        }\n    };\n\n    updateForces(): void {\n        const { width, height } = this.state;\n\n        const linkForce = d3.forceLink<NodeI, LinkI>()\n            .id(d => d.networkAddress.toString())\n            .distance(getDistance)\n            .strength(0.2);\n        const chargeForce = d3.forceManyBody()\n            .distanceMin(200)\n            .distanceMax(1000)\n            .strength(-200);\n\n        const repelForce = d3.forceManyBody()\n            .strength(-140)\n            .distanceMax(50)\n            .distanceMin(20);\n\n        const collisionForce = d3.forceCollide(40)\n            .strength(1)\n            .iterations(100);\n\n        const centerForce = d3.forceCenter(width / 2, height / 2);\n\n        this.simulation\n            .force(\"link\", linkForce)\n            .force(\"charge\", chargeForce)\n            .force(\"collisionForce\", collisionForce)\n            .force(\"repelForce\", repelForce)\n            .force(\"center\", centerForce);\n    }\n\n    async initPage(): Promise<void> {\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ width, height });\n    }\n\n    async componentDidMount(): Promise<void> {\n        await this.initPage()\n    }\n\n    renderMap(): ComponentChild {\n        const { width, height, tooltipNode } = this.state;\n        const { networkGraph } = this.props;\n        const { setTooltip, removeTooltip, openDetailsWindow } = this;\n\n        useEffect(() => {\n            this.updateNodes();\n        }, [networkGraph.nodes.length]);\n        return (\n            <svg viewBox={`0 0 ${width} ${height}`}>\n                <Links links={networkGraph.links} />\n                <Nodes\n                    nodes={networkGraph.nodes}\n                    simulation={this.simulation}\n                    onMouseOver={setTooltip}\n                    onMouseOut={removeTooltip}\n                    onDblClick={openDetailsWindow}\n                />\n                {tooltipNode ? (\n                    <foreignObject\n                        className={style.foreignObject}\n                        x={tooltipNode.x as number + 10}\n                        y={tooltipNode.y as number + 5}\n                    >\n                        <Tooltip info={tooltipNode} />\n                    </foreignObject>\n                ) : null}\n            </svg>\n        )\n    }\n    onRequestClick = (): void => {\n        const { networkMapRequest } = this.props;\n        networkMapRequest();\n    }\n    renderMessage(): ComponentChild {\n        const { isLoading } = this.props;\n        return (<div class=\"container\">\n            {\n                isLoading ? (\n                    \"Loading, please wait.Depending on the size of your network this can take somewhere between 10 seconds and 2 minutes.\") : (\n                        <Fragment>No map data.\n                            <button onClick={this.onRequestClick} className=\"btn btn-primary\">Requests?</button>\n                        </Fragment>\n\n                    )\n            }\n\n        </div>);\n    }\n    render(): ComponentChild {\n        const { networkGraph } = this.props;\n        return (\n            <div className={style.container} ref={this.ref}>\n                {networkGraph.nodes.length ? this.renderMap() : this.renderMessage()}\n            </div>\n        );\n    }\n}\n\n\nconst mappedProps = [\"networkGraph\", \"isLoading\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, Actions>(mappedProps, actions)(Map);\nexport default ConnectedMap;\n","import { Component, ComponentChild, h } from \"preact\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    className?: string;\n\n    onClick?(arg1: T): void;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T>, {}> {\n    onClick = (): void => {\n        const { item, onClick } = this.props;\n        onClick && onClick(item);\n\n    };\n\n    render(): ComponentChild {\n        const { children, ...rest } = this.props;\n        return <button {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}\n\n\nexport class Link<T> extends Component<ButtonProps<T>, {}> {\n    onClick = (): void => {\n        const { item, onClick } = this.props;\n        onClick && onClick(item);\n\n    };\n\n    render(): ComponentChild {\n        const { children, ...rest } = this.props;\n        return <a href=\"#\" {...rest} onClick={this.onClick}>{children}</a>;\n    }\n}","import { Component, ComponentChild, h, Fragment } from \"preact\";\nimport Button from \"../button\";\nimport { Device } from \"../../types\";\nimport { connect } from \"unistore/preact\";\nimport actions, { Actions } from \"../../actions\";\nimport cx from \"classnames\";\ninterface DeviceControlGroupProps {\n    device: Device;\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & Actions, {}> {\n    onBindClick = (): void => {\n        const { device } = this.props;\n        location.href = `/zigbee/device?dev=${encodeURIComponent(device.friendly_name)}&activeTab=Bind`;\n    };\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, getZigbeeDevicesList, getDeviceInfo, device } = this.props;\n        const newName = prompt(\"Enter new name\", device.friendly_name);\n        if (newName !== null && newName !== device.friendly_name) {\n            await renameDevice(device.friendly_name, newName);\n            await getZigbeeDevicesList(true);\n            await getDeviceInfo(device.friendly_name);\n        }\n    };\n\n\n    onRemoveClick = async (force = false): Promise<void> => {\n        const { removeDevice, getZigbeeDevicesList, device } = this.props;\n        const message = force ? \"Remove device?\" : \"Send leave request?\";\n        if (confirm(message)) {\n            await removeDevice(device.friendly_name, force);\n            await getZigbeeDevicesList(true);\n        }\n    };\n\n    render(): ComponentChild {\n        const { device } = this.props;\n        const validDevice = !!device.ieeeAddr;\n\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                <Button<void> className=\"btn btn-secondary\" onClick={this.onRenameClick}><i\n                    className=\"fa fa-edit\" /></Button>\n                {\n                    <Fragment>\n                        <button type=\"button\" class=\"btn btn-danger dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className={cx(\"fa\", \"fa-trash\")} /></button>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n                            {validDevice ? <a class=\"dropdown-item\" href=\"#\" onClick={(): Promise<void> => this.onRemoveClick(false)}>Send leave req</a> : null}\n                            <a class=\"dropdown-item\" href=\"#\" onClick={(): Promise<void> => this.onRemoveClick(true)}>Remove</a>\n                        </div>\n                    </Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, {}, Actions>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","import { Component, ComponentChild, h } from \"preact\";\n\ninterface SafeImgState {\n    isOk: boolean;\n}\n\ninterface SafeImgProps {\n    [k: string]: any;\n}\n\nexport default class SafeImg extends Component<SafeImgProps, SafeImgState> {\n    constructor() {\n        super();\n        this.state = {\n            isOk: true\n        };\n    }\n\n    onError = (): void => {\n        this.setState({\n            isOk: false\n        });\n\n    };\n\n    render(): ComponentChild {\n        const { children, ...rest } = this.props;\n        const { isOk } = this.state;\n        return isOk ? <img {...rest} onError={this.onError} /> : children;\n    }\n}","import { FunctionalComponent, h } from \"preact\";\nimport { PowerSource } from \"../../types\";\nimport style from \"./style.css\";\n\n\ninterface PowerSourceProps {\n    source: PowerSource;\n    battery?: number;\n    className?: string;\n}\n\n\nconst PowerSourceComp: FunctionalComponent<PowerSourceProps> = ({ source, battery, className }) => {\n    let batteryClass = \"fa-battery-full\";\n    switch (source) {\n        case \"Battery\":\n            if (battery) {\n                if (battery > 75) {\n                    batteryClass = \"fa-battery-full\";\n                } else if (battery >= 75) {\n                    batteryClass = \"fa-battery-three-quarters\";\n                } else if (battery >= 50) {\n                    batteryClass = \"fa-battery-half\";\n                } else if (battery >= 25) {\n                    batteryClass = \"fa-battery-quarter\";\n                } else {\n                    batteryClass = \"fa-battery-empty\"\n                }\n            }\n            return <i className={`fa ${batteryClass} ${className}`}\n                title={`${source} ${battery ? `, power level ${battery}%` : \"\"} `} />;\n\n        case \"Mains (single phase)\":\n            return <i className={`fa fa-plug ${style.plug} ${className}`} title={source} />;\n        default:\n            return <i className={`fa fa-question ${className}`} title={source} />;\n    }\n};\n\nexport default PowerSourceComp;\n","import { Component, ComponentChild, h } from \"preact\";\nimport style from \"./style.css\";\nimport { SortDirection } from \"../../types\";\n\n\n\ninterface ActionTHProps<T> {\n    column: T;\n    current: T;\n    currentDirection: SortDirection;\n\n    onClick?(arg1: unknown): void;\n\n    [k: string]: unknown;\n}\n\nexport default class ActionTH<T> extends Component<ActionTHProps<T>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow(): ComponentChild {\n        const { currentDirection, current, column } = this.props;\n        if (current === column) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            }\n            return <i className={`fa fa-sort-amount-down`} />;\n        }\n        return <i className={`fa fa-sort-amount-down ${style.invisible}`} />;\n\n    }\n\n    render(): ComponentChild {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, ...rest } = this.props;\n        return <th {...rest}>\n            <span className=\"btn btn-link\" onClick={this.onClick}>{children}</span>\n            {this.renderArrow()}\n        </th>;\n    }\n}","import style from \"./style.css\";\nimport { Component, ComponentChild, h } from \"preact\";\nimport orderBy from \"lodash/orderBy\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport { Device, SortDirection } from \"../../types\";\nimport { genDeviceDetailsLink, genDeviceImageUrl, lastSeen, toHex } from \"../../utils\";\nimport SafeImg from \"../safe-image\";\nimport { Notyf } from \"notyf\";\nimport PowerSource from \"../power-source\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\nimport ActionTH from \"./ActionTH\";\n\n\n//TODO: proper type alias\ntype SortColumns =\n    \"lastSeen\"\n    | \"networkAddress\"\n    | \"friendly_name\"\n    | \"ieeeAddr\"\n    | \"manufacturerName\"\n    | \"st.linkquality\"\n    | \"modelID\"\n    | \"Interview.State\"\n    | \"PowerSource\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumns;\n    currentTime: number;\n}\n\n\n\n\nconst storeKey = \"ZigbeeTableState\";\n\nexport class ZigbeeTable extends Component<Actions & GlobalState, ZigbeeTableState> {\n    constructor() {\n        super();\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"lastSeen\",\n            currentTime: Date.now()\n        };\n    }\n\n    restoreState(): void {\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Partial<ZigbeeTableState> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n\n    loadData = (showLoading = true): void => {\n        const { getZigbeeDevicesList } = this.props;\n        getZigbeeDevicesList(showLoading);\n\n    };\n\n\n    componentDidMount(): void {\n        this.restoreState();\n        this.loadData();\n    }\n\n\n\n    onSortChange = (column: SortColumns, sortDir: SortDirection | undefined = undefined): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (sortColumn === column) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    render(): ComponentChild {\n        const { devices, isLoading } = this.props;\n        if (isLoading) {\n            return <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>;\n        }\n        return (devices.length ? this.renderDevicesTable() : <div>No data</div>);\n    }\n\n\n    renderDevicesTable(): ComponentChild {\n        const { sortColumn, sortDirection } = this.state;\n        const { devices, deviceStates } = this.props;\n        const sortedDevices = orderBy<Device>(devices, [sortColumn], [sortDirection]);\n        const { onSortChange } = this;\n\n        return (\n            <table className={`table table-striped table-borderless ${style.adaptive} ${style.zigbee}`}>\n                <thead>\n                    <tr className=\"text-nowrap\">\n                        <th>#</th>\n                        <th>Pic</th>\n                        <ActionTH<SortColumns> className={cx(style[\"nwk-addr\"], style[\"action-column\"])} column=\"networkAddress\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange}>nwkAddr</ActionTH>\n                        <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"friendly_name\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange}>Friendly name</ActionTH>\n                        <ActionTH<SortColumns> className={cx(style[\"ieee-addr\"], style[\"action-column\"])} column=\"ieeeAddr\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange}>ieeeAddr</ActionTH>\n                        <ActionTH<SortColumns> className={cx(style[\"manu-name\"], style[\"action-column\"])} column=\"manufacturerName\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange} titile=\"manufacturerName\">Manufacturer</ActionTH>\n                        <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"modelID\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange}>Model</ActionTH>\n                        <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"st.linkquality\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange} title=\"Link quality\">LQI</ActionTH>\n                        <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"lastSeen\"\n                            currentDirection={sortDirection} current={sortColumn}\n                            onClick={onSortChange}>Last seen</ActionTH>\n\n                        <th>Power</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sortedDevices.map((device: Device, index) => <tr>\n                        <td className=\"font-weight-bold\">{index + 1}</td>\n                        <td className={style[\"device-pic\"]}><SafeImg class={cx(style[\"device-image\"])}\n                            src={genDeviceImageUrl(device.modelID)} />\n                        </td>\n                        <td className={style[\"nwk-addr\"]}><a\n                            href={genDeviceDetailsLink(device.networkAddress)}>{toHex(device.networkAddress)}</a>\n                        </td>\n                        <td>{device.friendly_name}</td>\n                        <td className={style[\"ieee-addr\"]}>{device.ieeeAddr ? device.ieeeAddr : \"<corrupted>\"}</td>\n                        <td title={device.manufacturerName}\n                            className={cx(style[\"manu-name\"], \"text-truncate\", \"text-nowrap\", \"position-relative\")}>{device.manufacturerName}</td>\n                        <td>{device.modelID}</td>\n                        <td>{deviceStates[device.friendly_name]?.linkquality}</td>\n                        <td>{lastSeen(device)}</td>\n                        <td className=\"text-left\">\n                            <PowerSource source={device.powerSource} battery={deviceStates[device.friendly_name]?.battery} />\n                        </td>\n                        <td>\n                            <DeviceControlGroup device={device} />\n                        </td>\n                    </tr>)}\n\n                </tbody>\n            </table>\n\n        );\n    }\n}\n\nconst mappedProps = [\"isLoading\", \"time\", \"devices\", \"forceRender\", \"deviceStates\"];\nconst ConnectedDevicePage = connect<{}, ZigbeeTableState, GlobalState, Actions>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedDevicePage;\n","import { Component, ComponentChild, h } from \"preact\";\nimport { connect } from \"unistore/preact\";\nimport actions, { Actions } from \"../../actions\";\nimport { GlobalState } from \"../../store\";\n// import SimpleBind from \"./simple-bind\";\n// import Bind from \"./bind\";\n// import DeviceInfo from \"./info\";\n// import TabPanel, { TabInfo } from \"../tab-panel\";\n// import style from \"./style.css\";\n\ninterface DevicePageState {\n    dev: string;\n    activeTab: string;\n}\n\nexport class DevicePage extends Component<Actions & GlobalState, DevicePageState> {\n    constructor() {\n\n        super();\n        const { searchParams } = new URL(location.href);\n        const paramActiveTab = searchParams.get(\"activeTab\");\n        const deviceId = searchParams.get(\"dev\");\n        this.state = {\n            dev: deviceId,\n            activeTab: paramActiveTab ? paramActiveTab : \"Info\"\n        };\n    }\n\n    componentDidMount(): void {\n        // this.initPage();\n        // console.log(this.props);\n        \n    }\n\n\n\n    initPage(): void {\n        const { dev } = this.state;\n        const { getDeviceInfo, getZigbeeDevicesList, getDeviceBinds } = this.props;\n\n        getDeviceInfo(dev);\n        getDeviceBinds(dev);\n        getZigbeeDevicesList(true);\n    }\n\n    render(): ComponentChild {\n        // const { isLoading, isError } = this.props;\n        // const { activeTab } = this.state;\n\n        // const tabs: TabInfo[] = [\n        //     {\n        //         name: \"Info\",\n        //         TabComponent: <DeviceInfo />\n        //     },\n        //     {\n        //         name: \"Bind\",\n        //         TabComponent: <Bind />\n        //     },\n        //     {\n        //         name: \"States\",\n        //         TabComponent: <SimpleBind />\n        //     }\n        // ];\n        return (<div class={\"position-relative\"}>\n            <h1>NOT IMPLEMENTED YET</h1>\n            {/* {\n                isError ? <h1>{isError}</h1> : (\n                    isLoading ? (\n                        <div className={`${style.loader} spinner-grow text-primary`} role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    ) : null\n                )\n\n            }\n            <TabPanel defaultTab={activeTab} tabs={tabs} /> */}\n        </div>);\n\n    }\n}\n\nconst mappedProps = [\"isLoading\", \"isError\", \"device\"];\nconst ConnectedDevicePage = connect<{}, DevicePageState, GlobalState, Actions>(mappedProps, actions)(DevicePage);\nexport default ConnectedDevicePage;","import { Component, ComponentChild, h } from \"preact\";\nimport { connect } from \"unistore/preact\";\nimport actions, { Actions } from \"../../actions\";\nimport { GlobalState, Settings } from \"../../store\";\nimport { Notyf } from \"notyf\";\n\n\n\n\n\ntype SettingsKey = \"mqtt_host\" | \"mqtt_user\" | \"mqtt_password\";\n\ninterface SettingsPageState {\n    form: Settings;\n}\n\n\nexport class SettingsPage extends Component<Actions & GlobalState, SettingsPageState> {\n    state = {\n        form: {} as Settings\n    }\n    componentDidMount(): void {\n        const { settings } = this.props;\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({ form: settings });\n    }\n\n    changeHandler = (event): void => {\n        const name: SettingsKey = event.target.name;\n        const value: string = event.target.value;\n        const { form } = this.state;\n        this.setState({\n            form: {\n                ...form, ...{ [name]: value }\n            }\n        });\n\n\n    }\n    onSubmit = (e: Event): void => {\n        e.preventDefault();\n        const { form } = this.state;\n        localStorage.setItem('config', JSON.stringify(form));\n        new Notyf().success(\"Saved!\");\n    }\n    render(): ComponentChild {\n        const { form } = this.state;\n\n        return <div className=\"container\"><form onSubmit={this.onSubmit}>\n            <fieldset class=\"form-group\">\n                <div class=\"row\">\n                    <legend class=\"col-form-label col-sm-2 pt-0\">Mqtt connetion</legend>\n                    <div class=\"col-sm-10\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"mqtt_host\">Host and port</label>\n                            <input required value={form.mqtt_host} onChange={this.changeHandler} type=\"text\" class=\"form-control\" id=\"mqtt_host\" name=\"mqtt_host\" placeholder=\"mqtt://192.168.1.200:1884\" />\n                            <small class=\"form-text text-muted\">\n                                This is websocket port, check for <b>Opening websockets listen socket on port</b> in moqsqitto log\n</small>\n                        </div>\n\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"mqtt_user\">Topic preffix</label>\n                            <input required value={form.mqtt_topic_preffix} onChange={this.changeHandler} type=\"text\" class=\"form-control\" id=\"mqtt_topic_preffix\" name=\"mqtt_topic_preffix\" placeholder=\"zigbee2mqtt/\" />\n                        </div>\n\n\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"mqtt_user\">Username</label>\n                            <input value={form.mqtt_user} onChange={this.changeHandler} type=\"text\" class=\"form-control\" id=\"mqtt_user\" name=\"mqtt_user\" placeholder=\"user1\" />\n                        </div>\n\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"mqtt_password\">Password</label>\n                            <input value={form.mqtt_password} onChange={this.changeHandler} type=\"passwors\" class=\"form-control\" id=\"mqtt_password\" name=\"mqtt_password\" placeholder=\"ilovepelmeni\" />\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\n        </form>\n        </div>\n\n    }\n}\n\nconst mappedProps = [\"settings\"];\nconst ConnectedSettingsPage = connect<{}, SettingsPageState, GlobalState, Actions>(mappedProps, actions)(SettingsPage);\nexport default ConnectedSettingsPage;","import { h, FunctionalComponent } from 'preact';\nimport { Link } from 'preact-router/match';\n\n\nconst NavBar: FunctionalComponent<{}> = () => (\n    <nav class=\"navbar navbar-expand-sm navbar-dark info-color  navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"#\">z2m lite admin</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\" />\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <Link className=\"nav-link waves-effect waves-light\" activeClassName=\"active\" href=\"/\">Home</Link>\n                </li>\n                <li class=\"nav-item\">\n                    <Link className=\"nav-link waves-effect waves-light\" activeClassName=\"active\" href=\"/map\">Map</Link>\n                </li>\n                <li class=\"nav-item\">\n                    <Link className=\"nav-link waves-effect waves-light\" activeClassName=\"active\" href=\"/settings\">Settings</Link>\n                </li>\n            </ul>\n        </div>\n    </nav>\n);\n\nexport default NavBar;","/* eslint-disable @typescript-eslint/camelcase */\n// Must be the first import\n\n\n\nif (process.env.NODE_ENV === 'development') {\n    // Must use require here as import statements are only allowed\n    // to exist at the top of a file.\n    require(\"preact/debug\");\n\n}\n\n// const poly = require(\"preact-cli/lib/lib/webpack/polyfills\");\nimport \"notyf/notyf.min.css\";\n\nimport { render, h, Component, ComponentChild, Fragment } from 'preact';\n\nimport ConnectedMap from \"./components/map\";\nimport ConnectedZigbeeTable from \"./components/zigbee\";\nimport Router, { CustomHistory, route } from 'preact-router';\n\n// import ConnectedDiscovery from \"./components/discovery\";\n// import ConnectedLogViewer from \"./components/log-viewer\";\n// import ConnectedCodeEditor from \"./components/code-editor\";\nimport ConnectedDevicePage from \"./components/device-page\";\nimport store from \"./store\";\nimport { Provider } from \"unistore/preact\";\nimport { createHashHistory } from 'history';\n\n\n\n\nimport './mqtt';\nimport ConnectedSettingsPage from \"./components/settings\";\nimport NavBar from \"./components/navbar\";\n\n\nclass Main extends Component {\n    settingsConfigured(): boolean {\n        const { settings } = store.getState();\n        return !!settings.mqtt_host;\n    }\n    handleRoute = (e): void => {\n\n        switch (e.url) {\n            case '/settings':\n                break;\n            default:\n                if (!this.settingsConfigured()) {\n\n                    route('/settings', true);\n                }\n                break;\n        }\n    };\n\n    render(): ComponentChild {\n        return (\n            <Provider store={store}>\n                <Fragment>\n                    <NavBar />\n                    <Router history={(createHashHistory() as unknown as CustomHistory)} onChange={this.handleRoute}>\n                        <ConnectedZigbeeTable path=\"/\" />\n                        <ConnectedMap path=\"/map\" />\n                        <ConnectedDevicePage path=\"/device/:dev\" />\n                        <ConnectedSettingsPage path=\"/settings\" />\n                    </Router>\n                </Fragment>\n\n            </Provider>\n\n        );\n    }\n\n}\n\n\nrender(<Main />, document.body);\n\n// const DiscoveryApp: FunctionalComponent<{}> = () => (\n//     <Provider store={store}><ConnectedDiscovery /></Provider>\n// );\n// const LogViewerApp: FunctionalComponent<{}> = () => (\n//     <Provider store={store}><ConnectedLogViewer /></Provider>\n// );\n// const CodeEditorApp: FunctionalComponent<{}> = () => (\n//     <Provider store={store}><ConnectedCodeEditor /></Provider>\n// );\n\n// const initWidgets = (): void => {\n    // habitat(ZigbeeTableApp).render({\n    //     selector: \"[data-widget-host=\\\"zigbee\\\"]\",\n    //     clean: true\n    // });\n\n    // habitat(DevicePageApp).render({\n    //     selector: \"[data-widget-host=\\\"device-page\\\"]\",\n    //     clean: true\n    // });\n\n    // habitat(MapApp).render({\n    //     selector: \"[data-widget-host=\\\"map\\\"]\",\n    //     clean: true\n    // });\n\n    // habitat(DiscoveryApp).render({\n    //     selector: \"[data-widget-host=\\\"discovery\\\"]\",\n    //     clean: true\n    // });\n    // habitat(LogViewerApp).render({\n    //     selector: \"[data-widget-host=\\\"log-viewer\\\"]\",\n    //     clean: true\n    // });\n\n    // habitat(CodeEditorApp).render({\n    //     selector: \"[data-widget-host=\\\"code-editor\\\"]\",\n    //     clean: true\n    // });\n\n\n// };\n// document.addEventListener(\"DOMContentLoaded\", initWidgets);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"_1rk7BV3JOGLq0LBsDwlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plug\":\"_1rcBQvphkleKOfovl_Pvke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zigbee\":\"pyUw6XrDJwVDAd3O8540m\",\"actions\":\"gw3rbQq5ewCSIxGBpPmLW\",\"action-column\":\"_9SKic9U7zOc4ced8VnqrQ\",\"invisible\":\"xL9O5xYzyPwhLPC4mMolg\",\"adaptive\":\"_3muOVdl36jJiVia7saOlXF\",\"device-image\":\"_1iHkacKbhmIu3DVhNRYbcT\",\"nwk-addr\":\"EFe8Zugx_CKGG7nI77css\",\"ieee-addr\":\"_1GxvFsSniUTQeAfkPTn-cK\",\"manu-name\":\"_3hdFev3NLQTc3kbVCsXlHM\",\"device-pic\":\"_1mC0z2WyiQ2lZUxLOQpEt5\"};"],"sourceRoot":""}